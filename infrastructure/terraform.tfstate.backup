{
  "version": 4,
  "terraform_version": "1.9.1",
  "serial": 10,
  "lineage": "a75586e8-1997-f92f-1348-514e8dd85d97",
  "outputs": {},
  "resources": [
    {
      "mode": "managed",
      "type": "aws_cloudformation_stack",
      "name": "s3",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "capabilities": null,
            "disable_rollback": false,
            "iam_role_arn": "",
            "id": "arn:aws:cloudformation:us-east-1:436627471875:stack/c3-s3/d050f410-4765-11ef-bcf3-125cb12aae37",
            "name": "c3-s3",
            "notification_arns": null,
            "on_failure": null,
            "outputs": {
              "BucketArnVPCFlowLogs": "arn:aws:s3:::cand-c3-vpc-flow-logs-436627471875",
              "BucketNameRecipesFree": "cand-c3-free-recipes-436627471875",
              "BucketNameRecipesSecret": "cand-c3-secret-recipes-436627471875"
            },
            "parameters": {},
            "policy_body": null,
            "policy_url": null,
            "tags": null,
            "tags_all": {},
            "template_body": "Description:  This template deploys an S3 bucket for storage of recipes.\r\n\r\nResources:\r\n  S3BucketRecipesFree:\r\n    Type: AWS::S3::Bucket\r\n    Properties:\r\n      BucketName: !Join [ \"-\", [ \"cand-c3-free-recipes\", !Ref 'AWS::AccountId' ] ]\r\n  S3BucketRecipesSecret:\r\n    Type: AWS::S3::Bucket\r\n    Properties:\r\n      BucketName: !Join [ \"-\", [ \"cand-c3-secret-recipes\", !Ref 'AWS::AccountId' ] ]\r\n  S3BucketVPCFlowLogs:\r\n      Type: AWS::S3::Bucket\r\n      Properties:\r\n        BucketName: !Join [ \"-\", [ \"cand-c3-vpc-flow-logs\", !Ref 'AWS::AccountId' ] ]\r\n\r\nOutputs:\r\n  BucketNameRecipesFree:\r\n    Value: !Ref 'S3BucketRecipesFree'\r\n    Description: Name of the Amazon S3 bucket that you will upload free recipes to.\r\n    Export:\r\n      Name: BucketNameRecipesFree\r\n  BucketNameRecipesSecret:\r\n    Value: !Ref 'S3BucketRecipesSecret'\r\n    Description: Name of the Amazon S3 bucket that you will upload secret recipes to.\r\n    Export:\r\n      Name: BucketNameRecipesSecret\r\n  BucketArnVPCFlowLogs:\r\n    Value: !GetAtt S3BucketVPCFlowLogs.Arn\r\n    Description: Arn of the Amazon S3 bucket that have vpc flow logs for this project\r\n    Export:\r\n      Name: BucketArnVPCFlowLogs\r\n",
            "template_url": null,
            "timeout_in_minutes": 0,
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjE4MDAwMDAwMDAwMDAsInVwZGF0ZSI6MTgwMDAwMDAwMDAwMH19"
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_cloudformation_stack",
      "name": "vpc",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "capabilities": null,
            "disable_rollback": false,
            "iam_role_arn": "",
            "id": "arn:aws:cloudformation:us-east-1:436627471875:stack/c3-vpc/dd36f490-4765-11ef-9d79-0ebb0073c95b",
            "name": "c3-vpc",
            "notification_arns": null,
            "on_failure": null,
            "outputs": {
              "NoIngressSecurityGroup": "sg-05e71a80ec485e745",
              "PrivateSubnet1": "subnet-0d2b84bb9f57e334e",
              "PrivateSubnet2": "subnet-0495d99447126f8e2",
              "PrivateSubnets": "subnet-0d2b84bb9f57e334e,subnet-0495d99447126f8e2",
              "PublicSubnet1": "subnet-0644868ee6cd2b2b3",
              "PublicSubnet2": "subnet-0d61f4033aff9ebfe",
              "PublicSubnets": "subnet-0644868ee6cd2b2b3,subnet-0d61f4033aff9ebfe",
              "VPC": "vpc-0134affa812f39329"
            },
            "parameters": {},
            "policy_body": null,
            "policy_url": null,
            "tags": null,
            "tags_all": {},
            "template_body": "Description:  This template deploys a VPC, with a pair of public and private subnets spread\r\n  across two Availability Zones. It deploys an internet gateway, with a default\r\n  route on the public subnets. It deploys a pair of NAT gateways (one in each AZ),\r\n  and default routes for them in the private subnets.\r\n\r\nParameters:\r\n  EnvironmentName:\r\n    Description: An environment name that is prefixed to resource names\r\n    Type: String\r\n    Default: moms-kithen-web-service\r\n\r\n  VpcCIDR:\r\n    Description: Please enter the IP range (CIDR notation) for this VPC\r\n    Type: String\r\n    Default: 10.192.0.0/16\r\n\r\n  PublicSubnet1CIDR:\r\n    Description: Please enter the IP range (CIDR notation) for the public subnet in the first Availability Zone\r\n    Type: String\r\n    Default: 10.192.10.0/24\r\n\r\n  PublicSubnet2CIDR:\r\n    Description: Please enter the IP range (CIDR notation) for the public subnet in the second Availability Zone\r\n    Type: String\r\n    Default: 10.192.11.0/24\r\n\r\n  PrivateSubnet1CIDR:\r\n    Description: Please enter the IP range (CIDR notation) for the private subnet in the first Availability Zone\r\n    Type: String\r\n    Default: 10.192.20.0/24\r\n\r\n  PrivateSubnet2CIDR:\r\n    Description: Please enter the IP range (CIDR notation) for the private subnet in the second Availability Zone\r\n    Type: String\r\n    Default: 10.192.21.0/24\r\n\r\nResources:\r\n  VPC:\r\n    Type: AWS::EC2::VPC\r\n    Properties:\r\n      CidrBlock: !Ref VpcCIDR\r\n      EnableDnsSupport: true\r\n      EnableDnsHostnames: true\r\n      Tags:\r\n        - Key: Name\r\n          Value: !Ref EnvironmentName\r\n\r\n  VpcFlowLog:\r\n    Type: AWS::EC2::FlowLog\r\n    Properties:\r\n      LogDestinationType: s3\r\n      LogDestination: !ImportValue BucketArnVPCFlowLogs\r\n      ResourceId: !Ref VPC\r\n      ResourceType: VPC\r\n      TrafficType: ALL\r\n\r\n  InternetGateway:\r\n    Type: AWS::EC2::InternetGateway\r\n    Properties:\r\n      Tags:\r\n        - Key: Name\r\n          Value: !Ref EnvironmentName\r\n\r\n  InternetGatewayAttachment:\r\n    Type: AWS::EC2::VPCGatewayAttachment\r\n    Properties:\r\n      InternetGatewayId: !Ref InternetGateway\r\n      VpcId: !Ref VPC\r\n\r\n  PublicSubnet1:\r\n    Type: AWS::EC2::Subnet\r\n    Properties:\r\n      VpcId: !Ref VPC\r\n      AvailabilityZone: !Select [ 0, !GetAZs '' ]\r\n      CidrBlock: !Ref PublicSubnet1CIDR\r\n      MapPublicIpOnLaunch: true\r\n      Tags:\r\n        - Key: Name\r\n          Value: !Sub ${EnvironmentName} Public Subnet (AZ1)\r\n\r\n  PublicSubnet2:\r\n    Type: AWS::EC2::Subnet\r\n    Properties:\r\n      VpcId: !Ref VPC\r\n      AvailabilityZone: !Select [ 1, !GetAZs  '' ]\r\n      CidrBlock: !Ref PublicSubnet2CIDR\r\n      MapPublicIpOnLaunch: true\r\n      Tags:\r\n        - Key: Name\r\n          Value: !Sub ${EnvironmentName} Public Subnet (AZ2)\r\n\r\n  PrivateSubnet1:\r\n    Type: AWS::EC2::Subnet\r\n    Properties:\r\n      VpcId: !Ref VPC\r\n      AvailabilityZone: !Select [ 0, !GetAZs  '' ]\r\n      CidrBlock: !Ref PrivateSubnet1CIDR\r\n      MapPublicIpOnLaunch: false\r\n      Tags:\r\n        - Key: Name\r\n          Value: !Sub ${EnvironmentName} Private Subnet (AZ1)\r\n\r\n  PrivateSubnet2:\r\n    Type: AWS::EC2::Subnet\r\n    Properties:\r\n      VpcId: !Ref VPC\r\n      AvailabilityZone: !Select [ 1, !GetAZs  '' ]\r\n      CidrBlock: !Ref PrivateSubnet2CIDR\r\n      MapPublicIpOnLaunch: false\r\n      Tags:\r\n        - Key: Name\r\n          Value: !Sub ${EnvironmentName} Private Subnet (AZ2)\r\n\r\n  # NatGateway1EIP:\r\n  #   Type: AWS::EC2::EIP\r\n  #   DependsOn: InternetGatewayAttachment\r\n  #   Properties:\r\n  #     Domain: vpc\r\n  #\r\n  # NatGateway2EIP:\r\n  #   Type: AWS::EC2::EIP\r\n  #   DependsOn: InternetGatewayAttachment\r\n  #   Properties:\r\n  #     Domain: vpc\r\n  #\r\n  # NatGateway1:\r\n  #   Type: AWS::EC2::NatGateway\r\n  #   Properties:\r\n  #     AllocationId: !GetAtt NatGateway1EIP.AllocationId\r\n  #     SubnetId: !Ref PublicSubnet1\r\n  #\r\n  # NatGateway2:\r\n  #   Type: AWS::EC2::NatGateway\r\n  #   Properties:\r\n  #     AllocationId: !GetAtt NatGateway2EIP.AllocationId\r\n  #     SubnetId: !Ref PublicSubnet2\r\n\r\n  PublicRouteTable:\r\n    Type: AWS::EC2::RouteTable\r\n    Properties:\r\n      VpcId: !Ref VPC\r\n      Tags:\r\n        - Key: Name\r\n          Value: !Sub ${EnvironmentName} Public Routes\r\n\r\n  DefaultPublicRoute:\r\n    Type: AWS::EC2::Route\r\n    DependsOn: InternetGatewayAttachment\r\n    Properties:\r\n      RouteTableId: !Ref PublicRouteTable\r\n      DestinationCidrBlock: 0.0.0.0/0\r\n      GatewayId: !Ref InternetGateway\r\n\r\n  PublicSubnet1RouteTableAssociation:\r\n    Type: AWS::EC2::SubnetRouteTableAssociation\r\n    Properties:\r\n      RouteTableId: !Ref PublicRouteTable\r\n      SubnetId: !Ref PublicSubnet1\r\n\r\n  PublicSubnet2RouteTableAssociation:\r\n    Type: AWS::EC2::SubnetRouteTableAssociation\r\n    Properties:\r\n      RouteTableId: !Ref PublicRouteTable\r\n      SubnetId: !Ref PublicSubnet2\r\n\r\n\r\n  PrivateRouteTable1:\r\n    Type: AWS::EC2::RouteTable\r\n    Properties:\r\n      VpcId: !Ref VPC\r\n      Tags:\r\n        - Key: Name\r\n          Value: !Sub ${EnvironmentName} Private Routes (AZ1)\r\n\r\n  DefaultPrivateRoute1:\r\n    Type: AWS::EC2::Route\r\n    Properties:\r\n      RouteTableId: !Ref PrivateRouteTable1\r\n      DestinationCidrBlock: 0.0.0.0/0\r\n      GatewayId: !Ref InternetGateway\r\n\r\n  PrivateSubnet1RouteTableAssociation:\r\n    Type: AWS::EC2::SubnetRouteTableAssociation\r\n    Properties:\r\n      RouteTableId: !Ref PrivateRouteTable1\r\n      SubnetId: !Ref PrivateSubnet1\r\n\r\n  PrivateRouteTable2:\r\n    Type: AWS::EC2::RouteTable\r\n    Properties:\r\n      VpcId: !Ref VPC\r\n      Tags:\r\n        - Key: Name\r\n          Value: !Sub ${EnvironmentName} Private Routes (AZ2)\r\n\r\n  DefaultPrivateRoute2:\r\n    Type: AWS::EC2::Route\r\n    Properties:\r\n      RouteTableId: !Ref PrivateRouteTable2\r\n      DestinationCidrBlock: 0.0.0.0/0\r\n      GatewayId: !Ref InternetGateway\r\n\r\n  PrivateSubnet2RouteTableAssociation:\r\n    Type: AWS::EC2::SubnetRouteTableAssociation\r\n    Properties:\r\n      RouteTableId: !Ref PrivateRouteTable2\r\n      SubnetId: !Ref PrivateSubnet2\r\n\r\n  NoIngressSecurityGroup:\r\n    Type: AWS::EC2::SecurityGroup\r\n    Properties:\r\n      GroupName: \"no-ingress-sg\"\r\n      GroupDescription: \"Security group with no ingress rule\"\r\n      VpcId: !Ref VPC\r\n\r\n\r\nOutputs:\r\n  VPC:\r\n    Description: A reference to the created VPC\r\n    Value: !Ref VPC\r\n    Export:\r\n      Name: VpcId\r\n\r\n  PublicSubnets:\r\n    Description: A list of the public subnets\r\n    Value: !Join [ \",\", [ !Ref PublicSubnet1, !Ref PublicSubnet2 ]]\r\n\r\n  PrivateSubnets:\r\n    Description: A list of the private subnets\r\n    Value: !Join [ \",\", [ !Ref PrivateSubnet1, !Ref PrivateSubnet2 ]]\r\n\r\n  PublicSubnet1:\r\n    Description: A reference to the public subnet in the 1st Availability Zone\r\n    Value: !Ref PublicSubnet1\r\n    Export:\r\n      Name: PublicSubnetTrusted\r\n\r\n  PublicSubnet2:\r\n    Description: A reference to the public subnet in the 2nd Availability Zone\r\n    Value: !Ref PublicSubnet2\r\n    Export:\r\n      Name: PublicSubnetUnTrusted\r\n\r\n  PrivateSubnet1:\r\n    Description: A reference to the private subnet in the 1st Availability Zone\r\n    Value: !Ref PrivateSubnet1\r\n    Export:\r\n      Name: PrivateSubnet\r\n\r\n  PrivateSubnet2:\r\n    Description: A reference to the private subnet in the 2nd Availability Zone\r\n    Value: !Ref PrivateSubnet2\r\n\r\n  NoIngressSecurityGroup:\r\n    Description: Security group with no ingress rule\r\n    Value: !Ref NoIngressSecurityGroup\r\n",
            "template_url": null,
            "timeout_in_minutes": 0,
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjE4MDAwMDAwMDAwMDAsInVwZGF0ZSI6MTgwMDAwMDAwMDAwMH19",
          "dependencies": [
            "aws_cloudformation_stack.s3"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_key_pair",
      "name": "ssh",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-1:436627471875:key-pair/Udacity SSH Key",
            "fingerprint": "1e:60:6f:13:e0:76:f4:e7:78:5c:82:1d:52:8d:19:56",
            "id": "Udacity SSH Key",
            "key_name": "Udacity SSH Key",
            "key_name_prefix": "",
            "key_pair_id": "key-0a4cf8165798fb412",
            "key_type": "rsa",
            "public_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQCxRjAdK4yGDPEV6ZAKgUgydMxZKeI2Z9XvP9+rLMykxDFRsPYbK/BpNO5E40rM6ujoc17JcivLAoBD+7p+TiFMRUxmSd8EShDWrPfxJ20kNi8LwNmm8zHDTf9PZbaz7Y/S7f2Bs+h/NquXZY+zPVuJMrWNJu1rblEa/pGmSM3Gpy3U+8LY0M8dUSKyU5PpVLcMRHnrXLE+72GnONBbgkFWa/MskjZ76Svl9cizeOBYO8+pLT3kgXPGRjpBOASKBdT0t3TvcQ0IosyU44HfZGlqK1+BhVI0QsDYIM6N/p6uLOtQkv+HzKwHT17yA/snrlojSMczqbfRXpFmyKnzG7HHuDdJ4U++bllsep99Fj4e2F5YF/ZpPGtSatOwXa4Q5d19+6urKUnJNGx/lcpOuUHjDHGqlJZ3X2AeTs7MWIK8QdtMJgzS2sPQKNnr9PmEoTjAZqtfSevG2fqkuHJnFTJouyXL4yOIgQinz9F/xCcTZHRGfkeP40Wv3lAOdXJCvBrLqWr7pcq/p6Sa/egMiX6H723W99lbuxGVzzckowTWZS9IOYi25QDpa6CF5GNUqJL90cE1WnF/spWNhYffuGOK2EG3qQqkkh3gH/fbRZQPZbv8KxL02benISycBD32l5nfRA1/NXchL4KOkv9qK16RYH6qE+enwTNbzl4NR30xxQ== admin@HuyenDao",
            "tags": null,
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    }
  ],
  "check_results": null
}
